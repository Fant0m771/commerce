<?php

/**
 * Implements hook_init().
 */
function take_order_myself_init() {
  take_order_myself_add_modal_settings();
}

/**
 * Implements hook_menu().
 */
function take_order_myself_menu() {
  $items = array();

  $items['view-store/%ctools_js'] = array(
    'title'           => '',
    'page callback'   => 'take_order_myself_view_store_map_callback',
    'page arguments'  => array(1, 2),
    'access callback' => TRUE,
    'type'            => MENU_CALLBACK,
  );
  return $items;
}

function take_order_myself_view_store_map_callback($js = NULL, $nid) {
  $output = node_view(node_load($nid));
  if ($js) {
    ctools_include('ajax');
    $commands = array();
    $commands[] = ajax_command_html('#modal-content', render($output));
    $commands[] = ajax_command_invoke('#modalContent', 'modal_window_position');
    print ajax_render($commands); exit;
  }
  else {
    return $output;
  }
}

function take_order_myself_view_store_modal_page($params) {
    $modal_button = array(
      'ajax_link' => "view-store/nojs/" . $params['nid'],
      'address'   => $params['city'] . " " . $params['address'],
      'title'     => $params['link_text'],
    );
    $output = ctools_modal_text_button($modal_button['address'],
                                       $modal_button['ajax_link'],
                                       $modal_button['title'],
                                       'ctools-modal-store-modal-style');
    return $output;
}

/**
 * Implements hook_form_alter()
 */  
function take_order_myself_form_alter(&$form, &$form_state, $form_id) {
  global $user;

  switch ($form_id) {
    case "commerce_checkout_form_checkout":
      $form = _take_order_myself_fix_shipping_form($form);
      $form = _take_order_myself_switch_method($form);
      break;
  }

  return $form;
}

function _take_order_myself_fix_shipping_form($form) {
  if (isset($form["customer_profile_shipping"])) {
    $form["customer_profile_shipping"]["commerce_customer_address"][LANGUAGE_NONE][0]['street_block']['thoroughfare']['#title'] = t("Address");
    $form["customer_profile_shipping"]["commerce_customer_address"][LANGUAGE_NONE][0]['street_block']['thoroughfare']['#attributes'] = array('class' => array('can-disable'));
    $form["customer_profile_shipping"]["commerce_customer_address"][LANGUAGE_NONE][0]['street_block']['thoroughfare']['#weight'] = 1;

    $form["customer_profile_shipping"]["commerce_customer_address"][LANGUAGE_NONE][0]["locality_block"]['locality']['#attributes'] = array('class' => array('can-disable'));

    unset($form["customer_profile_shipping"]["commerce_customer_address"][LANGUAGE_NONE][0]['street_block']["premise"]);
    unset($form["customer_profile_shipping"]["commerce_customer_address"][LANGUAGE_NONE][0]["locality_block"]['postal_code']);
    unset($form["customer_profile_shipping"]["commerce_customer_address"][LANGUAGE_NONE][0]["locality_block"]['administrative_area']);

  }
  return $form;
}


function _take_order_myself_switch_method($form) {

  drupal_add_js(drupal_get_path('module', 'take_order_myself') . '/js/billing_order.js');
  if ($form['customer_profile_shipping']) {
    $form['customer_profile_shipping']['#weight'] = 2;
  }

  $form['buttons']['#weight'] = 3;
  $form['myself_fildset'] = array(
    '#type' => 'fieldset',
    //'#prefix' => views_embed_view('stores'),
    '#title' => t("Take order"),
    '#weight' => 1,

  );



  $addresses = _take_order_myself_get_store_list();
  $stores = array();
  foreach ($addresses as $key => $address) {
    $form['myself_fildset']['store_adresses'][] = array(
      '#type' => 'radio',
      '#name' => 'store-addresses',
      '#title' => take_order_myself_view_store_modal_page(array(
        'nid' => $address->nid,
        'city' => $address->field_store_city[LANGUAGE_NONE][0]['value'],
        'address' => $address->field_store_address[LANGUAGE_NONE][0]['value'],
        'link_text' => t("show on map"),
      )),
      '#attributes' => array(
        'class' => array('addresses'),
        'data-city' => $address->field_store_city[LANGUAGE_NONE][0]['value'],
        'data-address' => $address->field_store_address[LANGUAGE_NONE][0]['value'],
      ),
    );
  }

 return $form;
}

/**
 * Get list stores
 */
function _take_order_myself_get_store_list() {
  
   // Get nodes which have store content type 
  $query = new EntityFieldQuery();
  $entities = $query->entityCondition('entity_type', 'node')
  ->propertyCondition('type', 'store')
  ->propertyCondition('status', 1)
  ->execute();
  $nodes = array();

  if (!empty($entities['node'])) {
    foreach ($entities['node'] as $element) {
      $nodes[] = node_load($element->nid);
    }
  }

  return $nodes;
}

/**
 * Add modal window settings.
 */
function take_order_myself_add_modal_settings() {
  static $added = FALSE;

  if ($added == FALSE) {
    $added = TRUE;
    ctools_include('ajax');
    ctools_include('modal');
    ctools_modal_add_js();


    $custom_style = array(
      'store-modal-style' => array(
        'modalSize' => array(
          'type' => 'scale',
          'width' => '0.8',
          'height' => 'auto',
        ),
        'modalTheme' => 'TOMModalFormPopup',
        'class' => 'store_map',
        'closeText' => '',
        'animation' => 'fadeIn',
      ),
    );
    drupal_add_js($custom_style, 'setting');
    ctools_include('plugins');
  }
}